extends layout

block content 
  .form-margin
    .form-container
      h1=title 
      
      form.form(action="" method="post" enctype="multipart/form-data")
        .form-title
          label(for='title') Title: 
          input#title(type='text' placeholder='Elden Ring' name='title' required='true' value=(data.game===undefined?'':data.game.title))  
        .form-checkbox
          p Platform/s
          .form-checkbox-inputs
            for platform in data.platforms
              label(for=platform.name) #{platform.name}
              input(id=platform.name type="checkbox" name="platform" value=platform.id checked=(data.game === undefined ? false : data.game.platform.some((element) => element.id === platform.id)))
        .form-checkbox
          p Developer/s
          .form-checkbox-inputs
            for developer in data.developers
              label(for=developer.name) #{developer.name} 
              input(id=developer.name type="checkbox" name="developer" value=developer.id checked=(data.game === undefined ? false : data.game.developer.some((element) => element.id === developer.id)))
        .form-select
          label(for='publisher') Publisher: 
          select(name="publisher" required='true')
            for publisher in data.publishers
              option(value=publisher.id selected=((data.game === undefined) ? false : data.game.publisher.id === publisher.id)) #{publisher.name}
        .form-checkbox
          p Genre/s
          .form-checkbox-inputs
            for genre in data.genres
              label(for=genre.name) #{genre.name} 
              input(id=genre.name type="checkbox" name="genre" value=genre.id checked=(data.game === undefined ? false : data.game.genre.some((element) => element.id === genre.id)))
        .form-summary
          label(for="summary") Summary: 
          if data.game
            textarea#summary(name="summary", cols="30", rows="10" required='true')=data.game.summary
          else
            textarea#summary(name="summary", cols="30", rows="10" required='true')
        .form-select
          label(for='rating') Rating: 
          select(name="rating" required='true')
            for rating in data.ratings
              option(value=rating.id selected=((data.game === undefined) ? false : data.game.rating.id === rating.id)) #{rating.name}
        label(for="image") Image: 
        input#image(type="file" accept='image/*' name='image' required='true') 
        button.button-form-submit(type="submit") Submit